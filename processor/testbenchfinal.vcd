$date
	Fri Oct 21 21:47:12 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module finalTestBench $end
$var wire 1 ! rst $end
$var reg 1 " clk $end
$scope module topLevel $end
$var wire 1 # PCSrcD $end
$var wire 32 $ PCbranchD [31:0] $end
$var wire 1 " clk $end
$var wire 1 % hazardDetected $end
$var wire 1 ! rst $end
$var wire 1 & write $end
$var wire 32 ' instruction [31:0] $end
$var wire 32 ( PC [31:0] $end
$scope module instructionFetch_top $end
$var wire 1 # PCSrcD $end
$var wire 32 ) PCbranchD [31:0] $end
$var wire 1 " clk $end
$var wire 1 % hazardDetected $end
$var wire 1 & write $end
$var wire 32 * instruction [31:0] $end
$var wire 32 + PC [31:0] $end
$var reg 32 , PCReg [31:0] $end
$var reg 32 - newPCreg [31:0] $end
$upscope $end
$scope module instructionMem_top $end
$var wire 32 . PC [31:0] $end
$var wire 1 / rst $end
$var wire 32 0 instruction [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000000000010000000000000101 0
z/
b0 .
b0 -
b0 ,
b0 +
b100000000000010000000000000101 *
bz )
b0 (
b100000000000010000000000000101 '
z&
0%
bz $
z#
1"
0!
$end
#50
0"
#100
1"
#150
0"
#200
1"
#250
0"
#300
1"
#350
0"
#400
1"
#450
0"
#500
1"
#550
0"
#600
1"
#650
0"
#700
1"
#750
0"
#800
1"
#850
0"
#900
1"
#950
0"
#1000
1"
#1050
0"
#1100
1"
#1150
0"
#1200
1"
#1250
0"
#1300
1"
#1350
0"
#1400
1"
#1450
0"
#1500
1"
#1550
0"
#1600
1"
#1650
0"
#1700
1"
#1750
0"
#1800
1"
#1850
0"
#1900
1"
#1950
0"
#2000
1"
#2050
0"
#2100
1"
#2150
0"
#2200
1"
#2250
0"
#2300
1"
#2350
0"
#2400
1"
#2450
0"
#2500
1"
#2502
