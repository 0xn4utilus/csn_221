$date
	Thu Oct 20 16:42:07 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! PCBranchD [31:0] $end
$var wire 1 " PCSrcD $end
$var wire 1 # hazardDetected $end
$var wire 1 $ write $end
$var wire 32 % instruction [31:0] $end
$var wire 32 & PC [31:0] $end
$var reg 1 ' clk $end
$scope module instructionFetch $end
$var wire 32 ( PCBranchD [31:0] $end
$var wire 1 " PCSrcD $end
$var wire 1 ' clk $end
$var wire 1 # hazardDetected $end
$var wire 1 $ write $end
$var wire 32 ) instruction [31:0] $end
$var wire 32 * PC [31:0] $end
$var reg 32 + PCReg [31:0] $end
$var reg 32 , newPCreg [31:0] $end
$scope module instructionMem $end
$var wire 32 - PC [31:0] $end
$var wire 32 . instruction [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000110000100000100000 .
b0 -
b0 ,
bx +
b0 *
b10000110000100000100000 )
b1000 (
1'
b0 &
b10000110000100000100000 %
1$
1#
1"
b1000 !
$end
#4
b0 $
b0 )
b0 *
#5
0&
#50
bx %
bx )
bx .
bx &
bx *
bx ,
bx -
0'
#100
1'
#150
0'
#200
1'
#250
0'
